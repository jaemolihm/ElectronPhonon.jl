                                                                                      
                                       ``:oss/                                        
                           `.+s+.     .+ys--yh+     `./ss+.                           
                          -sh//yy+`   +yy   +yy    -+h+-oyy                           
                          -yh- .oyy/.-sh.   .syo-.:sy-  /yh                           
                 `.-.`    `yh+   -oyyyo.     `/syys:    oys      `.`                  
               `/+ssys+-` `sh+      `                   oys`   .:osyo`                
               -yh- ./syyooyo`                          .sys+/oyo--yh/                
               `yy+    .-:-.                             `-/+/:`  -sh-                
                /yh.                                              oys                 
          ``..---hho---------`   .---------..`      `.-----.`    -hd+---.             
       `./osmNMMMMMMMMMMMMMMMs. +NNMMMMMMMMNNmh+.   yNMMMMMNm-  oNMMMMMNmo++:`        
       +sy--/sdMMMhyyyyyyyNMMh- .oyNMMmyyyyyhNMMm+` -yMMMdyyo:` .oyyNMMNhs+syy`       
       -yy/   /MMM+.`-+/``mMMy-   `mMMh:`````.dMMN:` `MMMy-`-dhhy```mMMy:``+hs        
        -yy+` /MMMo:-mMM+`-oo/.    mMMh:     `dMMN/`  dMMm:`dMMMMy..MMMo-.+yo`        
         .sys`/MMMMNNMMMs-         mMMmyooooymMMNo:   oMMM/sMMMMMM++MMN//oh:          
          `sh+/MMMhyyMMMs- `-`     mMMMMMMMMMNmy+-`   -MMMhMMMsmMMmdMMd/yy+           
    `-/+++oyy-/MMM+.`/hh/.`mNm:`   mMMd+/////:-.`      NMMMMMd/:NMMMMMy:/yyo/:.`      
   +os+//:-..-oMMMo:--:::-/MMMo. .-mMMd+---`           hMMMMN+. oMMMMMo. `-+osyso:`   
   syo     `mNMMMMMNNNNNNNNMMMo.oNNMMMMMNNNN:`         +MMMMs:`  dMMMN/`     ``:syo   
   /yh`     :syyyyyyyyyyyyyyyy+.`+syyyyyyyyo:`         .oyys:`   .oyys:`        +yh   
   -yh-        ````````````````    `````````              ``        ``          oys   
   -+h/------------------------::::::::://////++++++++++++++++++++++///////::::/yd:   
   shdddddddddddddddddddddddddddddhhhhhhhhyyyyyssssssssssssssssyyyyyyyhhhhhhhddddh`   
                                                                                      
  S. Ponce, E. R. Margine, C. Verdi, and F. Giustino,                                 
                                                Comput. Phys. Commun. 209, 116 (2016) 
                                                                                      

     Program EPW v.5.3.1 starts on  8Nov2021 at 14: 7:50 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
         "P. Giannozzi et al., J. Phys.:Condens. Matter 29 465901 (2017);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on     2 processors

     MPI processes distributed on     1 nodes
     K-points division:     npool     =       2
     Reading input from epw_setup.in

     WARNING: The specified dis_win_min is ignored.
              You should instead use bands_skipped = 'exclude_bands = ...'
              to control the lower bound of band manifold.

     No temperature supplied. Setting temps(:) to 300 K.

     Reading xml data from directory:

     ./temp/pb.save/

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation= PZ
                           (   1   1   0   0   0   0   0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         703     703    211                12387    12387    2109
 
     Reading collected, re-writing distributed wavefunctions

     --                                                                         

     bravais-lattice index     =            2
     lattice parameter (a_0)   =       9.2700  a.u.
     unit-cell volume          =     199.1495 (a.u.)^3
     number of atoms/cell      =            1
     number of atomic types    =            1
     kinetic-energy cut-off    =      60.0000  Ry
     charge density cut-off    =     240.0000  Ry
     Exchange-correlation= PZ
                           (   1   1   0   0   0   0   0)


     celldm(1)=    9.27000  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of a_0)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/a_0)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

   Cartesian axes

     site n.  atom      mass           positions (a_0 units)
        1        Pb 207.2000   tau( 1) = (    0.00000    0.00000    0.00000  )
 
     49 Sym.Ops. (with q -> -q+G )


     G cutoff =  522.4094  (  12387 G-vectors)     FFT grid: ( 36, 36, 36)
     number of k points=   27  gaussian broad. (Ry)=  0.0250     ngauss =   1
                       cart. coord. in units 2pi/a_0
        k(    1) = (   0.0000000   0.0000000   0.0000000), wk =   0.0740741
        k(    2) = (  -0.3333333   0.3333333  -0.3333333), wk =   0.0740741
        k(    3) = (  -0.6666667   0.6666667  -0.6666667), wk =   0.0740741
        k(    4) = (   0.3333333   0.3333333   0.3333333), wk =   0.0740741
        k(    5) = (   0.0000000   0.6666667   0.0000000), wk =   0.0740741
        k(    6) = (  -0.3333333   1.0000000  -0.3333333), wk =   0.0740741
        k(    7) = (   0.6666667   0.6666667   0.6666667), wk =   0.0740741
        k(    8) = (   0.3333333   1.0000000   0.3333333), wk =   0.0740741
        k(    9) = (   0.0000000   1.3333333   0.0000000), wk =   0.0740741
        k(   10) = (  -0.3333333  -0.3333333   0.3333333), wk =   0.0740741
        k(   11) = (  -0.6666667   0.0000000   0.0000000), wk =   0.0740741
        k(   12) = (  -1.0000000   0.3333333  -0.3333333), wk =   0.0740741
        k(   13) = (   0.0000000   0.0000000   0.6666667), wk =   0.0740741
        k(   14) = (  -0.3333333   0.3333333   0.3333333), wk =   0.0740741
        k(   15) = (  -0.6666667   0.6666667  -0.0000000), wk =   0.0740741
        k(   16) = (   0.3333333   0.3333333   1.0000000), wk =   0.0740741
        k(   17) = (   0.0000000   0.6666667   0.6666667), wk =   0.0740741
        k(   18) = (  -0.3333333   1.0000000   0.3333333), wk =   0.0740741
        k(   19) = (  -0.6666667  -0.6666667   0.6666667), wk =   0.0740741
        k(   20) = (  -1.0000000  -0.3333333   0.3333333), wk =   0.0740741
        k(   21) = (  -1.3333333   0.0000000   0.0000000), wk =   0.0740741
        k(   22) = (  -0.3333333  -0.3333333   1.0000000), wk =   0.0740741
        k(   23) = (  -0.6666667  -0.0000000   0.6666667), wk =   0.0740741
        k(   24) = (  -1.0000000   0.3333333   0.3333333), wk =   0.0740741
        k(   25) = (   0.0000000   0.0000000   1.3333333), wk =   0.0740741
        k(   26) = (  -0.3333333   0.3333333   1.0000000), wk =   0.0740741
        k(   27) = (  -0.6666667   0.6666667   0.6666667), wk =   0.0740741

     PseudoPot. # 1 for Pb read from file:
     ./pb_s.UPF
     MD5 check sum: 7774f596943a2055f0d8d19eea6f2ae8
     Pseudo is Norm-conserving, Zval = 14.0
     Generated using "atomic" code by A. Dal Corso  (Quantum ESPRESSO distribution)
     Using radial grid of 1281 points,  2 beta functions with: 
                l(1) =   2
                l(2) =   1
     EPW          :      0.24s CPU      0.54s WALL

     EPW          :      0.35s CPU      0.65s WALL

     -------------------------------------------------------------------
     Wannierization on  3 x  3 x  3 electronic grid
     -------------------------------------------------------------------
 
     Spin CASE ( default = unpolarized )
 
     Initializing Wannier90
 
 
     Initial Wannier projections
 
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   1
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   2
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   3
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   4

      - Number of bands is (  6)
      - Number of total bands is ( 11)
      - Number of excluded bands is (  5)
      - Number of wannier functions is (  4)
      - All guiding functions are given 
 
  Reading data about k-point neighbours 
 
      - All neighbours are found 
 
     AMN
      k points =    27 in    2 pools
            1 of   14 on ionode
            2 of   14 on ionode
            3 of   14 on ionode
            4 of   14 on ionode
            5 of   14 on ionode
            6 of   14 on ionode
            7 of   14 on ionode
            8 of   14 on ionode
            9 of   14 on ionode
           10 of   14 on ionode
           11 of   14 on ionode
           12 of   14 on ionode
           13 of   14 on ionode
           14 of   14 on ionode
 
     AMN calculated
 
     MMN
      k points =    27 in    2 pools
            1 of   14 on ionode
            2 of   14 on ionode
            3 of   14 on ionode
            4 of   14 on ionode
            5 of   14 on ionode
            6 of   14 on ionode
            7 of   14 on ionode
            8 of   14 on ionode
            9 of   14 on ionode
           10 of   14 on ionode
           11 of   14 on ionode
           12 of   14 on ionode
           13 of   14 on ionode
           14 of   14 on ionode
     MMN calculated
 
     Running Wannier90
 
     Wannier Function centers (cartesian, alat) and spreads (ang):
 
     (   0.08276   0.08276   0.08276) :   1.58770
     (   0.08276  -0.08276  -0.08276) :   1.58770
     (  -0.08276   0.08276  -0.08276) :   1.58770
     (  -0.08276  -0.08276   0.08276) :   1.58770
 
     -------------------------------------------------------------------
     WANNIER      :      2.08s CPU      2.18s WALL (       1 calls)
     -------------------------------------------------------------------

     Calculating kgmap

     Progress kgmap: ########################################
     kmaps        :      0.03s CPU      0.04s WALL (       1 calls)
     Symmetries of Bravais lattice:  48
     Symmetries of crystal:          48

     Reading interatomic force constants

     IFC last    0.0006587
      Imposed simple ASR

     Finished reading ifcs



     ===================================================================
     irreducible q point #    1
     ===================================================================

     Symmetries of small group of q: 48
          in addition sym. q -> -q+G:
 
     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000   0.000000000
     Imposing acoustic sum rule on the dynamical matrix
     Dyn mat calculated from ifcs
 
        q(    1 ) = (   0.0000000   0.0000000   0.0000000 )


     ===================================================================
     irreducible q point #    2
     ===================================================================

     Symmetries of small group of q:  6
 
     Number of q in the star =    8
     List of q in the star:
          1  -0.333333333   0.333333333  -0.333333333
          2   0.333333333   0.333333333  -0.333333333
          3   0.333333333   0.333333333   0.333333333
          4  -0.333333333   0.333333333   0.333333333
          5   0.333333333  -0.333333333   0.333333333
          6  -0.333333333  -0.333333333  -0.333333333
          7   0.333333333  -0.333333333  -0.333333333
          8  -0.333333333  -0.333333333   0.333333333
     Dyn mat calculated from ifcs
 
        q(    2 ) = (  -0.3333333   0.3333333  -0.3333333 )
        q(    3 ) = (   0.3333333   0.3333333  -0.3333333 )
        q(    4 ) = (   0.3333333   0.3333333   0.3333333 )
        q(    5 ) = (  -0.3333333   0.3333333   0.3333333 )
        q(    6 ) = (   0.3333333  -0.3333333   0.3333333 )
        q(    7 ) = (  -0.3333333  -0.3333333  -0.3333333 )
        q(    8 ) = (   0.3333333  -0.3333333  -0.3333333 )
        q(    9 ) = (  -0.3333333  -0.3333333   0.3333333 )


     ===================================================================
     irreducible q point #    3
     ===================================================================

     Symmetries of small group of q:  8
 
     Number of q in the star =    6
     List of q in the star:
          1   0.000000000   0.666666667   0.000000000
          2  -0.666666667   0.000000000   0.000000000
          3   0.000000000  -0.666666667   0.000000000
          4   0.000000000   0.000000000   0.666666667
          5   0.000000000   0.000000000  -0.666666667
          6   0.666666667   0.000000000   0.000000000
     Dyn mat calculated from ifcs
 
        q(   10 ) = (   0.0000000   0.6666667   0.0000000 )
        q(   11 ) = (  -0.6666667   0.0000000   0.0000000 )
        q(   12 ) = (   0.0000000  -0.6666667   0.0000000 )
        q(   13 ) = (   0.0000000   0.0000000   0.6666667 )
        q(   14 ) = (   0.0000000   0.0000000  -0.6666667 )
        q(   15 ) = (   0.6666667   0.0000000   0.0000000 )


     ===================================================================
     irreducible q point #    4
     ===================================================================

     Symmetries of small group of q:  4
 
     Number of q in the star =   12
     List of q in the star:
          1   0.666666667   0.000000000   0.666666667
          2   0.666666667   0.000000000  -0.666666667
          3  -0.666666667   0.000000000  -0.666666667
          4  -0.666666667   0.000000000   0.666666667
          5   0.000000000  -0.666666667   0.666666667
          6  -0.666666667   0.666666667   0.000000000
          7  -0.666666667  -0.666666667   0.000000000
          8   0.666666667   0.666666667   0.000000000
          9   0.666666667  -0.666666667   0.000000000
         10   0.000000000   0.666666667   0.666666667
         11   0.000000000   0.666666667  -0.666666667
         12   0.000000000  -0.666666667  -0.666666667
     Dyn mat calculated from ifcs
 
        q(   16 ) = (   0.6666667   0.0000000   0.6666667 )
        q(   17 ) = (   0.6666667   0.0000000  -0.6666667 )
        q(   18 ) = (  -0.6666667   0.0000000  -0.6666667 )
        q(   19 ) = (  -0.6666667   0.0000000   0.6666667 )
        q(   20 ) = (   0.0000000  -0.6666667   0.6666667 )
        q(   21 ) = (  -0.6666667   0.6666667   0.0000000 )
        q(   22 ) = (  -0.6666667  -0.6666667   0.0000000 )
        q(   23 ) = (   0.6666667   0.6666667   0.0000000 )
        q(   24 ) = (   0.6666667  -0.6666667   0.0000000 )
        q(   25 ) = (   0.0000000   0.6666667   0.6666667 )
        q(   26 ) = (   0.0000000   0.6666667  -0.6666667 )
        q(   27 ) = (  -0.0000000  -0.6666667  -0.6666667 )

     Writing epmatq on .epb files


     The .epb files have been correctly written


     Band disentanglement is used: nbndsub =    4
     Construct the Wigner-Seitz cell using Wannier centers and atomic positions 
     Number of WS vectors for electrons       43
     Number of WS vectors for phonons       43
     Number of WS vectors for electron-phonon       43
     Maximum number of cores for efficient parallelization       43

     Velocity matrix elements calculated
 
 
     Bloch2wane:          1 /         27
     Bloch2wane:          2 /         27
     Bloch2wane:          3 /         27
     Bloch2wane:          4 /         27
     Bloch2wane:          5 /         27
     Bloch2wane:          6 /         27
     Bloch2wane:          7 /         27
     Bloch2wane:          8 /         27
     Bloch2wane:          9 /         27
     Bloch2wane:         10 /         27
     Bloch2wane:         11 /         27
     Bloch2wane:         12 /         27
     Bloch2wane:         13 /         27
     Bloch2wane:         14 /         27
     Bloch2wane:         15 /         27
     Bloch2wane:         16 /         27
     Bloch2wane:         17 /         27
     Bloch2wane:         18 /         27
     Bloch2wane:         19 /         27
     Bloch2wane:         20 /         27
     Bloch2wane:         21 /         27
     Bloch2wane:         22 /         27
     Bloch2wane:         23 /         27
     Bloch2wane:         24 /         27
     Bloch2wane:         25 /         27
     Bloch2wane:         26 /         27
     Bloch2wane:         27 /         27
 

     Writing Hamiltonian, Dynamical matrix and EP vertex in Wann rep to file

     ===================================================================
     Memory usage:  VmHWM =       144Mb
                   VmPeak =      3747Mb
     ===================================================================
     
     Using uniform q-mesh:    1   1   1
     Size of q point mesh for interpolation:          1
     Using uniform k-mesh:    1   1   1
     Size of k point mesh for interpolation:          2
     Max number of k points per pool:                2

     Fermi energy coarse grid =   9.843414 eV

     Skipping the first    5 bands:

     The Fermi level will be determined with   4.00000 electrons

     Fermi energy is calculated from the fine k-mesh: Ef =  18.663180 eV

     Warning: check if difference with Fermi level fine grid makes sense

     ===================================================================

              ibndmin =     1  ebndmin =    -0.541 eV
              ibndmax =     4  ebndmax =    18.668 eV


     Writing data to read in the Julia code

     Calculating symmetry matrix elements, nsym = 48

     Calculating kgmap

     Progress kgmap: ########################################
  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48

     Number of ep-matrix elements per pool :           48 ~=    0.38 Kb (@ 8 bytes/ DP)
      
     A selecq.fmt file was found but re-created because selecqread == .FALSE. 
     We only need to compute        1 q-points
      
     ===================================================================
     Memory usage:  VmHWM =       144Mb
                   VmPeak =      3747Mb
     ===================================================================


     Unfolding on the coarse grid
     elphon_wrap  :     15.86s CPU     16.23s WALL (       1 calls)

     INITIALIZATION: 

     init_vloc    :      0.00s CPU      0.00s WALL (       1 calls)
     init_us_1    :      0.09s CPU      0.09s WALL (       2 calls)



     Electron-Phonon interpolation
     ephwann      :      0.48s CPU      0.58s WALL (       1 calls)
     ep-interp    :      0.00s CPU      0.00s WALL (       1 calls)

     Ham: step 1  :      0.00s CPU      0.00s WALL (       1 calls)
     Ham: step 2  :      0.00s CPU      0.00s WALL (       1 calls)
     ep: step 1   :      0.00s CPU      0.00s WALL (      81 calls)
     ep: step 2   :      0.39s CPU      0.48s WALL (       1 calls)
     wigner_seitz :      0.08s CPU      0.08s WALL (       1 calls)
     julia_export :      0.00s CPU      0.00s WALL (       1 calls)
     julia_symm   :      0.34s CPU      0.41s WALL (       1 calls)
     DynW2B       :      0.00s CPU      0.00s WALL (       1 calls)
     HamW2B       :      0.00s CPU      0.00s WALL (       3 calls)
     vmeW2B       :      0.00s CPU      0.00s WALL (       3 calls)
     ephW2Bp      :      0.00s CPU      0.00s WALL (       1 calls)
     ephW2B       :      0.00s CPU      0.00s WALL (       1 calls)


     MPI routines


     Total program execution
     EPW          :     18.79s CPU     19.64s WALL

     ===============================================================================
     The functionality-dependent EPW.bib file was created with suggested citations. 
     Please consider citing the papers listed in EPW.bib.                           
     ===============================================================================
                                                                                    
